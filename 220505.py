# (11654) 입력된 문자에 대한 아스키 코드값을 출력하기
# a = input()
# print(ord(a))

# ----------------------------------------------------------------------------------------------------

# (11720) N개의 숫자의 합 출력하기
# N = input()
# print(sum(map(int, str(input()))))

# ----------------------------------------------------------------------------------------------------

# (10809) 단어 S에서 a~z 알파벳이 처음 등장하는 위치를 출력하기
# S = input()
# for i in range(97, 123):
#     print(S.find(chr(i)), end=" ")

# ----------------------------------------------------------------------------------------------------

# (2675) 문자열 S의 각 문자를 R번 반복하여 만든 문자열 P를 출력하기
# import sys

# T = int(input())    # T는 테스트 케이스의 갯수
# for i in range(T):
#     R,S = sys.stdin.readline().split()  # S는 문자열, R은 S의 각 문자 반복횟수
#     P = ''
#     for i in S:
#         P += i*int(R)   # S의 각 문자를 R번 반복하여 문자열 P에 추가
#     print(P)

# ----------------------------------------------------------------------------------------------------

# (1157) 문자열 S에서 가장 많이 사용된 알파벳을 대문자로 출력하기 (대소문자 구분X)
# S = input().upper() # 대소문자 구분이 없으므로 모든 알파벳을 대문자로 변환
# S_set = set(S)  # 문자열을 집합으로 만들어 알파벳 중복 제거
# cnt = {}

# for i in S_set:
#     cnt[i] = S.count(i) # 딕셔너리 key: 알파벳 value: 사용횟수

# ans = [k for k,v in cnt.items() if max(cnt.values()) == v]  # 최대 value를 갖는 key들을 리스트에 저장
# if (len(ans) > 1):
#     print('?')  # 가장 많이 사용된 알파벳이 여러개일 경우 ? 출력
# else:
#     print(ans[0]) # 가장 많이 사용된 알파벳 출력

# ----------------------------------------------------------------------------------------------------

# (1152) 문자열 S에 포함된 단어의 개수 출력하기
# S = input().split() # 문자열에 포함된 공백 날리고 단어만 리스트로 저장
# print(len(S))

# ----------------------------------------------------------------------------------------------------

# (2908) 입력받은 두 수를 거꾸로 뒤집었을 때 더 큰 수를 출력하기
# a,b = input().split()
# ans = [int(a[::-1]), int(b[::-1])]  # 문자열 슬라이싱으로 문자열 뒤집기
# print(max(ans))

# ----------------------------------------------------------------------------------------------------

# (5622) 주어진 다이얼 전화 버튼의 문자를 숫자로 변환해서 누르는데 걸리는 시간을 출력하기
letter = [chr(x) for x in range(65, 91)]    # A~Z 리스트
time = sorted(([x for x in range(3, 11)]*3)+[8,10]) # A~Z 순서대로 걸리는 시간 (3,3,3,4,4,4,...,10,10,10,10)
dic = dict(zip(letter, time))   # 위의 두 리스트를 딕셔너리로 만들어 문자와 걸리는 시간을 일대일 매칭

S = input()
ans = 0
for i in S:
    ans += dic[i]   # 문자를 key로 사용해서 누르는데 걸리는 시간을 받아옴
print(ans)
# 딕셔너리 안쓸거면 ['ABC','DEF',...'WXYZ'] 만들어서 입력받은 문자와 비교(for문 2번 필요함)