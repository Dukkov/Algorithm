# (1316) 단어 내에서 각 문자가 연속해서 나타나는 그룹단어를 판별하여, 입력 받은 단어 중 그룹단어의 개수를 출력하기
# N = int(input())
# ans = N       # 입력받을 모든 단어가 그룹단어라고 가정함

# for i in range(N):
#     S = input()
#     if len(S) == 1:       # 1개의 알파벳으로 이루어진 단어는 당연히 그룹단어
#         continue

#     scan = [S[0]]     # 첫번째 알파벳을 리스트에 저장
#     flag = S[0]       # 첫번째 알파벳을 플래그로 설정
#     for x in S[1:]:
#         if x == flag:     # 현재 체크중인 알파벳이 플래그와 같다면 skip, 다음 알파벳 체크하기
#             continue
#         elif x in scan:       # 현재 체크중인 알파벳이 플래그와 다르며 이미 리스트에 존재한다면 현재 단어는 그룹단어가 아님
#             ans -= 1      # 그룹단어 개수 1개 감소
#             break     # 다음 단어 체크하러 go
#         else:       # 현재 체크중인 알파벳이 플래그와 다르나 리스트에 존재하지 않으면 리스트에 새로 추가
#             scan.append(x)
#             flag = x      # 현재 체크중인 알파벳을 플래그로 설정
# print(ans)

# ----------------------------------------------------------------------------------------------------

# (1712) 고정비용, 대당 생산비용, 대당 판매금액이 주어졌을 때 손익분기점이 되는 판매량 출력하기
a, b, c = map(int, input().split())     # 순서대로 고정비용, 대당 생산비용, 대당 판매금액

if b >= c:      # 대당 생산비용이 대당 판매금액보다 크거나 같으면 손익분기점이 존재할 수 없음
    print(-1)
else:
    print(int(a/(c-b))+1)       # 손익분기점이 되는 판매량은 a/(c-b)보다 큰 최소의 정수
